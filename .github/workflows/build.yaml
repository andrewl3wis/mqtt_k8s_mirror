name: Test Go Program with kind and MQTT

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'  # Use Go 1.22.10 or later

      # Install system dependencies
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgpgme-dev \
            btrfs-progs \
            libbtrfs-dev \
            pkg-config

      # Initialize Go module
      - name: Initialize Go module
        run: |
          go mod init your-repo

      # Add dependencies and tidy
      - name: Add dependencies
        run: |
          go get github.com/containers/image/v5/copy
          go get github.com/eclipse/paho.mqtt.golang
          go mod tidy

      # Build the Go binary
      - name: Build Go binary
        run: |
          go build -o combined_mirror

      # Generate self-signed TLS certificates
      - name: Generate TLS certificates
        run: |
          openssl req -x509 -newkey rsa:4096 -keyout server.key -out server.crt -days 365 -nodes -subj "/CN=host.docker.internal"

      # # Write the custom Kind configuration file
      # - name: Write Kind configuration
      #   run: |
      #     cat <<EOF > kind-config.yaml
      #     kind: Cluster
      #     apiVersion: kind.x-k8s.io/v1alpha4
      #     nodes:
      #     - role: control-plane
      #       extraPortMappings:
      #       - containerPort: 8443
      #         hostPort: 8443
      #         protocol: TCP
      #     EOF

      # Set up kind cluster using the kind-cluster action
      - name: Create kind cluster
        uses: helm/kind-action@v1.12.0
        # with:
        #   config: kind-config.yaml


      # Install mosquitto (MQTT broker)
      - name: Install mosquitto
        run: |
          sudo apt-get install -y mosquitto

      # Start mosquitto (MQTT broker)
      - name: Start mosquitto
        run: |
          mosquitto -p 1883 &
          MOSQUITTO_PID=$!
          echo "Mosquitto started with PID $MOSQUITTO_PID"

      # Deploy the program and test it
      - name: Deploy and test
        run: |
          # Start the program in the background
          ./combined_mirror --webhook --mirror --mqtt-broker tcp://localhost:1883 --webhook-port 8443 &
          PROGRAM_PID=$!

          # Wait for the program to start
          sleep 5

          # Create a MutatingWebhookConfiguration
          kubectl apply -f - <<EOF
          apiVersion: admissionregistration.k8s.io/v1
          kind: MutatingWebhookConfiguration
          metadata:
            name: webhook-mirroring
          webhooks:
            - name: webhook.mirroring.example.com
              admissionReviewVersions: ["v1"]
              sideEffects: None
              rules:
                - operations: ["CREATE"]
                  apiGroups: [""]
                  apiVersions: ["v1"]
                  resources: ["pods"]
              clientConfig:
                url: "https://host.docker.internal:8443/webhook"
              failurePolicy: Fail
          EOF

          # Create a pod with the webhook annotation
          kubectl apply -f - <<EOF
          apiVersion: v1
          kind: Pod
          metadata:
            name: webhook-test-pod
            annotations:
              webhook: "true"
          spec:
            containers:
              - name: nginx
                image: nginx
          EOF

          # Wait for the pod to be created
          sleep 10

          # Check the logs of the program
          cat combined_mirror.log

          # Clean up
          kill $PROGRAM_PID
          kill $MOSQUITTO_PID